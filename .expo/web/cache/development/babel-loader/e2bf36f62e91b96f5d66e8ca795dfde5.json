{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ahnwooseok/Downloads/github/react-native-tutoial/pages/Second.js\";\nimport React, { useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Task from \"./../components/Task\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskItems = _useState4[0],\n      setTaskItems = _useState4[1];\n\n  var handleAddTask = function handleAddTask() {\n    Keyboard.dismiss();\n    setTaskItems([].concat(_toConsumableArray(taskItems), [task]));\n    setTask(null);\n  };\n\n  var completeTask = function completeTask(index) {\n    var itemsCopy = _toConsumableArray(taskItems);\n\n    itemsCopy.splice(index, 1);\n    setTaskItems(itemsCopy);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    keyboardShouldPersistTaps: \"handled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.tasksWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"this is second page\"), React.createElement(View, {\n    style: styles.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, taskItems.map(function (item, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      onPress: function onPress() {\n        return completeTask(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 37\n      }\n    }, React.createElement(Task, {\n      text: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 41\n      }\n    }));\n  })))), React.createElement(View, {\n    style: styles.writeTaskWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: 'Write a task',\n    value: task,\n    onChangeText: function onChangeText(text) {\n      return setTask(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleAddTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.addWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.addText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"+\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EAED'\n  },\n  tasksWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  items: {\n    marginTop: 30\n  },\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 60,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    width: 250\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#C0C0C0',\n    borderWidth: 1\n  },\n  addText: {}\n});","map":{"version":3,"names":["React","useState","Task","App","task","setTask","taskItems","setTaskItems","handleAddTask","Keyboard","dismiss","completeTask","index","itemsCopy","splice","styles","container","flexGrow","tasksWrapper","sectionTitle","items","map","item","writeTaskWrapper","input","text","addWrapper","addText","StyleSheet","create","flex","backgroundColor","paddingTop","paddingHorizontal","fontSize","fontWeight","marginTop","position","bottom","width","flexDirection","justifyContent","alignItems","paddingVertical","borderRadius","borderColor","borderWidth","height"],"sources":["/Users/ahnwooseok/Downloads/github/react-native-tutoial/pages/Second.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { KeyboardAvoidingView, StyleSheet, Text, View, TextInput, TouchableOpacity, Keyboard, ScrollView } from 'react-native';\nimport Task from './../components/Task';\n\nexport default function App() {\n    const [task, setTask] = useState();\n    const [taskItems, setTaskItems] = useState([]);\n\n    const handleAddTask = () => {\n        Keyboard.dismiss();\n        setTaskItems([...taskItems, task])\n        setTask(null);\n    }\n\n    const completeTask = (index) => {\n        let itemsCopy = [...taskItems];\n        itemsCopy.splice(index, 1);\n        setTaskItems(itemsCopy)\n    }\n\n    return (\n        <View style={styles.container}>\n            {/* Added this scroll view to enable scrolling when list gets longer than the page */}\n            <ScrollView\n                contentContainerStyle={{\n                    flexGrow: 1\n                }}\n                keyboardShouldPersistTaps='handled'\n            >\n\n                {/* Today's Tasks */}\n                <View style={styles.tasksWrapper}>\n                    <Text style={styles.sectionTitle}>this is second page</Text>\n                    <View style={styles.items}>\n                        {/* This is where the tasks will go! */}\n                        {\n                            taskItems.map((item, index) => {\n                                return (\n                                    <TouchableOpacity key={index}  onPress={() => completeTask(index)}>\n                                        <Task text={item} />\n                                    </TouchableOpacity>\n                                )\n                            })\n                        }\n                    </View>\n                </View>\n\n            </ScrollView>\n\n            {/* Write a task */}\n            {/* Uses a keyboard avoiding view which ensures the keyboard does not cover the items on screen */}\n            <View style={styles.writeTaskWrapper}>\n                <TextInput style={styles.input} placeholder={'Write a task'} value={task} onChangeText={text => setTask(text)} />\n                <TouchableOpacity onPress={() => handleAddTask()}>\n                    <View style={styles.addWrapper}>\n                        <Text style={styles.addText}>+</Text>\n                    </View>\n                </TouchableOpacity>\n            </View>\n\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#E8EAED',\n    },\n    tasksWrapper: {\n        paddingTop: 80,\n        paddingHorizontal: 20,\n    },\n    sectionTitle: {\n        fontSize: 24,\n        fontWeight: 'bold'\n    },\n    items: {\n        marginTop: 30,\n    },\n    writeTaskWrapper: {\n        position: 'absolute',\n        bottom: 60,\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        alignItems: 'center'\n    },\n    input: {\n        paddingVertical: 15,\n        paddingHorizontal: 15,\n        backgroundColor: '#FFF',\n        borderRadius: 60,\n        borderColor: '#C0C0C0',\n        borderWidth: 1,\n        width: 250,\n    },\n    addWrapper: {\n        width: 60,\n        height: 60,\n        backgroundColor: '#FFF',\n        borderRadius: 60,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderColor: '#C0C0C0',\n        borderWidth: 1,\n    },\n    addText: {},\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}